{"frames":[{"func":"pge_rc_bayzips %>% filter(CUSTOMERCLASS == \"Elec- Residential\", \n    YEAR %in% 2019:2020, MONTH %in% 1:6) %>% pivot_wider(names_from = YEAR, \n    values_from = TOTALKBTU) %>% rename(KBTU2019 = \"2019\", KBTU2020 = \"2020\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(quote(`_fseq`(`_lhs`)), env, env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(quote(`_fseq`(`_lhs`)), env, env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`_fseq`(`_lhs`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"freduce(value, `_function_list`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withVisible(function_list[[k]](value))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"function_list[[k]](value)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rename(., KBTU2019 = \"2019\", KBTU2020 = \"2020\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rename.data.frame(., KBTU2019 = \"2019\", KBTU2020 = \"2020\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tidyselect::eval_rename(expr(c(...)), .data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rename_impl(data, names(data), as_quosure(expr, env), strict = strict, \n    name_spec = name_spec)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_select_impl(x, names, {\n    {\n        sel\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_subscript_errors(vars_select_eval(vars, expr, strict, data = x, \n    name_spec = name_spec, uniquely_named = uniquely_named, allow_rename = allow_rename, \n    type = type), type = type)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(instrument_base_errors(expr), vctrs_error_subscript = function(cnd) {\n    cnd$subscript_action <- subscript_action(type)\n    cnd$subscript_elt <- \"column\"\n    cnd_signal(cnd) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"instrument_base_errors(expr)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, simpleError = function(cnd) {\n    abort(conditionMessage(cnd), parent = cnd)\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vars_select_eval(vars, expr, strict, data = x, name_spec = name_spec, \n    uniquely_named = uniquely_named, allow_rename = allow_rename, \n    type = type)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"env(top, !!!set_names(vars_split$val, vars_split$key))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"env_bind0(env, dots$named)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cnd) \n{\n    abort(conditionMessage(cnd), parent = cnd)\n}, \"variable names are limited to 10000 bytes\", base::quote(env_bind0(env,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(conditionMessage(cnd), parent = cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: variable names are limited to 10000 bytes\n"}